// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/iavl_api.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HasRequest struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasRequest) Reset()         { *m = HasRequest{} }
func (m *HasRequest) String() string { return proto.CompactTextString(m) }
func (*HasRequest) ProtoMessage()    {}
func (*HasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{0}
}

func (m *HasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRequest.Unmarshal(m, b)
}
func (m *HasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRequest.Marshal(b, m, deterministic)
}
func (m *HasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRequest.Merge(m, src)
}
func (m *HasRequest) XXX_Size() int {
	return xxx_messageInfo_HasRequest.Size(m)
}
func (m *HasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasRequest proto.InternalMessageInfo

func (m *HasRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *HasRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetRequest struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SetRequest struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{2}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RemoveRequest struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{3}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteVersionRequest struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVersionRequest) Reset()         { *m = DeleteVersionRequest{} }
func (m *DeleteVersionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVersionRequest) ProtoMessage()    {}
func (*DeleteVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{4}
}

func (m *DeleteVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVersionRequest.Unmarshal(m, b)
}
func (m *DeleteVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVersionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVersionRequest.Merge(m, src)
}
func (m *DeleteVersionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVersionRequest.Size(m)
}
func (m *DeleteVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVersionRequest proto.InternalMessageInfo

func (m *DeleteVersionRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type HasResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasResponse) Reset()         { *m = HasResponse{} }
func (m *HasResponse) String() string { return proto.CompactTextString(m) }
func (*HasResponse) ProtoMessage()    {}
func (*HasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{5}
}

func (m *HasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasResponse.Unmarshal(m, b)
}
func (m *HasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasResponse.Marshal(b, m, deterministic)
}
func (m *HasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasResponse.Merge(m, src)
}
func (m *HasResponse) XXX_Size() int {
	return xxx_messageInfo_HasResponse.Size(m)
}
func (m *HasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasResponse proto.InternalMessageInfo

func (m *HasResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetResponse struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{6}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetResponse) Reset()         { *m = SetResponse{} }
func (m *SetResponse) String() string { return proto.CompactTextString(m) }
func (*SetResponse) ProtoMessage()    {}
func (*SetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{7}
}

func (m *SetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResponse.Unmarshal(m, b)
}
func (m *SetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResponse.Marshal(b, m, deterministic)
}
func (m *SetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResponse.Merge(m, src)
}
func (m *SetResponse) XXX_Size() int {
	return xxx_messageInfo_SetResponse.Size(m)
}
func (m *SetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetResponse proto.InternalMessageInfo

func (m *SetResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type RemoveResponse struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Removed              bool     `protobuf:"varint,2,opt,name=removed,proto3" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{8}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

func (m *RemoveResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RemoveResponse) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

type SaveVersionResponse struct {
	RootHash             []byte   `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVersionResponse) Reset()         { *m = SaveVersionResponse{} }
func (m *SaveVersionResponse) String() string { return proto.CompactTextString(m) }
func (*SaveVersionResponse) ProtoMessage()    {}
func (*SaveVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{9}
}

func (m *SaveVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveVersionResponse.Unmarshal(m, b)
}
func (m *SaveVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveVersionResponse.Marshal(b, m, deterministic)
}
func (m *SaveVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVersionResponse.Merge(m, src)
}
func (m *SaveVersionResponse) XXX_Size() int {
	return xxx_messageInfo_SaveVersionResponse.Size(m)
}
func (m *SaveVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVersionResponse proto.InternalMessageInfo

func (m *SaveVersionResponse) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *SaveVersionResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type DeleteVersionResponse struct {
	RootHash             []byte   `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVersionResponse) Reset()         { *m = DeleteVersionResponse{} }
func (m *DeleteVersionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVersionResponse) ProtoMessage()    {}
func (*DeleteVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{10}
}

func (m *DeleteVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVersionResponse.Unmarshal(m, b)
}
func (m *DeleteVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVersionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVersionResponse.Merge(m, src)
}
func (m *DeleteVersionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVersionResponse.Size(m)
}
func (m *DeleteVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVersionResponse proto.InternalMessageInfo

func (m *DeleteVersionResponse) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *DeleteVersionResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type VersionResponse struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{11}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type HashResponse struct {
	RootHash             []byte   `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashResponse) Reset()         { *m = HashResponse{} }
func (m *HashResponse) String() string { return proto.CompactTextString(m) }
func (*HashResponse) ProtoMessage()    {}
func (*HashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d8372b52373ba9, []int{12}
}

func (m *HashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashResponse.Unmarshal(m, b)
}
func (m *HashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashResponse.Marshal(b, m, deterministic)
}
func (m *HashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashResponse.Merge(m, src)
}
func (m *HashResponse) XXX_Size() int {
	return xxx_messageInfo_HashResponse.Size(m)
}
func (m *HashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HashResponse proto.InternalMessageInfo

func (m *HashResponse) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func init() {
	proto.RegisterType((*HasRequest)(nil), "proto.HasRequest")
	proto.RegisterType((*GetRequest)(nil), "proto.GetRequest")
	proto.RegisterType((*SetRequest)(nil), "proto.SetRequest")
	proto.RegisterType((*RemoveRequest)(nil), "proto.RemoveRequest")
	proto.RegisterType((*DeleteVersionRequest)(nil), "proto.DeleteVersionRequest")
	proto.RegisterType((*HasResponse)(nil), "proto.HasResponse")
	proto.RegisterType((*GetResponse)(nil), "proto.GetResponse")
	proto.RegisterType((*SetResponse)(nil), "proto.SetResponse")
	proto.RegisterType((*RemoveResponse)(nil), "proto.RemoveResponse")
	proto.RegisterType((*SaveVersionResponse)(nil), "proto.SaveVersionResponse")
	proto.RegisterType((*DeleteVersionResponse)(nil), "proto.DeleteVersionResponse")
	proto.RegisterType((*VersionResponse)(nil), "proto.VersionResponse")
	proto.RegisterType((*HashResponse)(nil), "proto.HashResponse")
}

func init() { proto.RegisterFile("proto/iavl_api.proto", fileDescriptor_92d8372b52373ba9) }

var fileDescriptor_92d8372b52373ba9 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x6e, 0x12, 0x4f,
	0x14, 0xc7, 0xb3, 0xf0, 0x83, 0xf2, 0x3b, 0x80, 0xb4, 0xd3, 0x85, 0x92, 0x85, 0x18, 0x9c, 0xa4,
	0x49, 0x63, 0x13, 0xd6, 0x7f, 0x17, 0xea, 0x95, 0x26, 0x36, 0x45, 0x43, 0x4c, 0xdc, 0x4d, 0x7a,
	0x4b, 0xa6, 0xe5, 0x08, 0x1b, 0xe9, 0x0e, 0xee, 0x0c, 0x1b, 0x1b, 0xe3, 0x8d, 0xaf, 0xe0, 0xd3,
	0xf8, 0x1c, 0xbe, 0x82, 0x0f, 0x62, 0x76, 0x66, 0xf6, 0x0f, 0xb4, 0x58, 0xa3, 0x57, 0xed, 0x99,
	0x73, 0xce, 0xe7, 0x7b, 0xce, 0xf0, 0xdd, 0x01, 0x7b, 0x19, 0x71, 0xc9, 0xdd, 0x80, 0xc5, 0x8b,
	0x09, 0x5b, 0x06, 0x43, 0x15, 0x92, 0x8a, 0xfa, 0xe3, 0xf4, 0x67, 0x9c, 0xcf, 0x16, 0xe8, 0xb2,
	0x65, 0xe0, 0xb2, 0x30, 0xe4, 0x92, 0xc9, 0x80, 0x87, 0x42, 0x17, 0x39, 0x3d, 0x93, 0x55, 0xd1,
	0xf9, 0xea, 0xbd, 0x8b, 0x97, 0x4b, 0x79, 0xa5, 0x93, 0xf4, 0x29, 0xc0, 0x88, 0x09, 0x0f, 0x3f,
	0xae, 0x50, 0x48, 0xd2, 0x85, 0x9d, 0x18, 0x23, 0x11, 0xf0, 0xb0, 0x6b, 0x0d, 0xac, 0xa3, 0xb2,
	0x97, 0x86, 0x64, 0x17, 0xca, 0x1f, 0xf0, 0xaa, 0x5b, 0x1a, 0x58, 0x47, 0x0d, 0x2f, 0xf9, 0x37,
	0xe9, 0x3c, 0x45, 0xf9, 0x37, 0x9d, 0x4f, 0x00, 0xfc, 0xbc, 0xd3, 0xe4, 0xad, 0x2c, 0x4f, 0x6c,
	0xa8, 0xc4, 0x6c, 0xb1, 0x42, 0xd3, 0xa3, 0x03, 0x7a, 0x0f, 0x9a, 0x1e, 0x5e, 0xf2, 0x18, 0xb7,
	0x36, 0xd2, 0x07, 0x60, 0xbf, 0xc2, 0x05, 0x4a, 0x3c, 0xd3, 0xda, 0xb7, 0x0e, 0x47, 0x0f, 0xa1,
	0xae, 0xd6, 0x17, 0x4b, 0x1e, 0x0a, 0x24, 0x1d, 0xa8, 0x46, 0x28, 0x56, 0x0b, 0xa9, 0xea, 0x6a,
	0x9e, 0x89, 0xe8, 0x33, 0xa8, 0xab, 0x5d, 0x4d, 0x99, 0x0d, 0x95, 0x20, 0x9c, 0xe2, 0x27, 0x43,
	0xd3, 0xc1, 0x96, 0xb1, 0x0f, 0xa1, 0xee, 0x17, 0x5a, 0xb7, 0x29, 0xbc, 0x80, 0x3b, 0xe9, 0x76,
	0xb9, 0x88, 0xc6, 0x59, 0x05, 0x5c, 0xb2, 0x4a, 0xa4, 0xea, 0xa6, 0x4a, 0xa6, 0xe6, 0xa5, 0x21,
	0x1d, 0xc3, 0xbe, 0xcf, 0xe2, 0x7c, 0x75, 0x83, 0xe9, 0xc1, 0xff, 0x11, 0xe7, 0x72, 0x32, 0x67,
	0x62, 0x6e, 0x50, 0xb5, 0xe4, 0x60, 0xc4, 0xc4, 0xbc, 0x78, 0x31, 0xa5, 0xf5, 0x8b, 0x79, 0x0b,
	0xed, 0x8d, 0xab, 0xfc, 0x37, 0xde, 0x31, 0xb4, 0x36, 0x49, 0xdb, 0x7f, 0x95, 0x63, 0x68, 0x24,
	0xb8, 0x3f, 0xd2, 0x7c, 0xf4, 0xbd, 0x02, 0xf5, 0xd7, 0x2f, 0xcf, 0xc6, 0x3e, 0x46, 0x71, 0x70,
	0x81, 0x64, 0x0c, 0xe5, 0x11, 0x13, 0x64, 0x4f, 0x1b, 0x7c, 0x98, 0xbb, 0xdb, 0x21, 0xc5, 0x23,
	0x8d, 0xa6, 0x77, 0xbf, 0xfe, 0xf8, 0xf9, 0xad, 0xd4, 0x25, 0x1d, 0x37, 0x7e, 0xe8, 0xca, 0x08,
	0xd1, 0xfd, 0x6c, 0xa6, 0xf8, 0xe2, 0xce, 0x99, 0x48, 0x68, 0xa7, 0x28, 0x33, 0x5a, 0xee, 0xf8,
	0x8c, 0x56, 0x30, 0xc6, 0x6f, 0x69, 0x33, 0x94, 0xe4, 0x04, 0xca, 0x7e, 0x81, 0xe6, 0x5f, 0xa7,
	0x15, 0xbc, 0x42, 0x0f, 0x14, 0x6d, 0x8f, 0x36, 0x32, 0x9a, 0x40, 0xf9, 0xdc, 0xba, 0x4f, 0xde,
	0x41, 0x55, 0x9b, 0x85, 0xd8, 0xa6, 0x6d, 0xed, 0xcb, 0x70, 0xda, 0x1b, 0xa7, 0x86, 0xe7, 0x28,
	0x9e, 0x4d, 0x5b, 0x19, 0x4f, 0x7b, 0x27, 0x41, 0x5e, 0x40, 0xbd, 0xe0, 0x1e, 0xd2, 0x19, 0xea,
	0x47, 0x63, 0x98, 0x3e, 0x1a, 0xc3, 0x93, 0xe4, 0xd1, 0x70, 0x9c, 0x74, 0xcc, 0xeb, 0x4e, 0xa3,
	0x03, 0x85, 0x77, 0x68, 0x3b, 0x1f, 0x97, 0xc5, 0x38, 0x31, 0x17, 0x90, 0x88, 0x84, 0xd0, 0x5c,
	0x33, 0x15, 0xe9, 0x19, 0xdc, 0x4d, 0x5f, 0xad, 0xd3, 0xbf, 0x39, 0x69, 0xd4, 0xa8, 0x52, 0xeb,
	0xd3, 0x83, 0x4c, 0x6d, 0xaa, 0xea, 0x8a, 0x7a, 0x3e, 0xec, 0xdc, 0xb6, 0x50, 0xc7, 0x88, 0x6c,
	0xe2, 0xbb, 0x0a, 0x4f, 0xc8, 0x6e, 0x86, 0x4f, 0xdf, 0xb3, 0x37, 0xf0, 0x9f, 0xf2, 0xfa, 0x36,
	0xe2, 0x7e, 0xee, 0xb2, 0xcc, 0xc1, 0xb4, 0xad, 0x70, 0x2d, 0xd2, 0xcc, 0x70, 0x89, 0x97, 0xcf,
	0xab, 0xaa, 0xf4, 0xf1, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0xda, 0xf1, 0x08, 0xde, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IAVLServiceClient is the client API for IAVLService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IAVLServiceClient interface {
	// Has returns a boolean result for a given key query in a versioned IAVL tree.
	Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasResponse, error)
	// Get returns a result containing the IAVL tree version and value for a given key
	// query in a versioned IAVL tree.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// Set returns a result after inserting a key/value pair into the IAVL tree
	// based on the current state of the tree.
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	// Remove returns a result after removing a key/value pair from the IAVL tree
	// based on the current state of the tree.
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	// SaveVersion saves a new IAVL tree version to disk based on the current state of
	// the tree. It returns the hash and new version number.
	SaveVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SaveVersionResponse, error)
	// DeleteVersion deletes an IAVL tree version from disk. The version can then no
	// longer be accessed.
	DeleteVersion(ctx context.Context, in *DeleteVersionRequest, opts ...grpc.CallOption) (*DeleteVersionResponse, error)
	// Version returns the IAVL tree version based on the current state.
	Version(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	// Hash returns the IAVL tree root hash based on the current state.
	Hash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HashResponse, error)
}

type iAVLServiceClient struct {
	cc *grpc.ClientConn
}

func NewIAVLServiceClient(cc *grpc.ClientConn) IAVLServiceClient {
	return &iAVLServiceClient{cc}
}

func (c *iAVLServiceClient) Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasResponse, error) {
	out := new(HasResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Has", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	out := new(SetResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) SaveVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SaveVersionResponse, error) {
	out := new(SaveVersionResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/SaveVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) DeleteVersion(ctx context.Context, in *DeleteVersionRequest, opts ...grpc.CallOption) (*DeleteVersionResponse, error) {
	out := new(DeleteVersionResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/DeleteVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) Version(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAVLServiceClient) Hash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/proto.IAVLService/Hash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IAVLServiceServer is the server API for IAVLService service.
type IAVLServiceServer interface {
	// Has returns a boolean result for a given key query in a versioned IAVL tree.
	Has(context.Context, *HasRequest) (*HasResponse, error)
	// Get returns a result containing the IAVL tree version and value for a given key
	// query in a versioned IAVL tree.
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// Set returns a result after inserting a key/value pair into the IAVL tree
	// based on the current state of the tree.
	Set(context.Context, *SetRequest) (*SetResponse, error)
	// Remove returns a result after removing a key/value pair from the IAVL tree
	// based on the current state of the tree.
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	// SaveVersion saves a new IAVL tree version to disk based on the current state of
	// the tree. It returns the hash and new version number.
	SaveVersion(context.Context, *empty.Empty) (*SaveVersionResponse, error)
	// DeleteVersion deletes an IAVL tree version from disk. The version can then no
	// longer be accessed.
	DeleteVersion(context.Context, *DeleteVersionRequest) (*DeleteVersionResponse, error)
	// Version returns the IAVL tree version based on the current state.
	Version(context.Context, *empty.Empty) (*VersionResponse, error)
	// Hash returns the IAVL tree root hash based on the current state.
	Hash(context.Context, *empty.Empty) (*HashResponse, error)
}

// UnimplementedIAVLServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIAVLServiceServer struct {
}

func (*UnimplementedIAVLServiceServer) Has(ctx context.Context, req *HasRequest) (*HasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Has not implemented")
}
func (*UnimplementedIAVLServiceServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedIAVLServiceServer) Set(ctx context.Context, req *SetRequest) (*SetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedIAVLServiceServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedIAVLServiceServer) SaveVersion(ctx context.Context, req *empty.Empty) (*SaveVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveVersion not implemented")
}
func (*UnimplementedIAVLServiceServer) DeleteVersion(ctx context.Context, req *DeleteVersionRequest) (*DeleteVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVersion not implemented")
}
func (*UnimplementedIAVLServiceServer) Version(ctx context.Context, req *empty.Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedIAVLServiceServer) Hash(ctx context.Context, req *empty.Empty) (*HashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hash not implemented")
}

func RegisterIAVLServiceServer(s *grpc.Server, srv IAVLServiceServer) {
	s.RegisterService(&_IAVLService_serviceDesc, srv)
}

func _IAVLService_Has_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Has(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Has",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Has(ctx, req.(*HasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_SaveVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).SaveVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/SaveVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).SaveVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_DeleteVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).DeleteVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/DeleteVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).DeleteVersion(ctx, req.(*DeleteVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Version(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAVLService_Hash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAVLServiceServer).Hash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.IAVLService/Hash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAVLServiceServer).Hash(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAVLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.IAVLService",
	HandlerType: (*IAVLServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Has",
			Handler:    _IAVLService_Has_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _IAVLService_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _IAVLService_Set_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _IAVLService_Remove_Handler,
		},
		{
			MethodName: "SaveVersion",
			Handler:    _IAVLService_SaveVersion_Handler,
		},
		{
			MethodName: "DeleteVersion",
			Handler:    _IAVLService_DeleteVersion_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _IAVLService_Version_Handler,
		},
		{
			MethodName: "Hash",
			Handler:    _IAVLService_Hash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/iavl_api.proto",
}
